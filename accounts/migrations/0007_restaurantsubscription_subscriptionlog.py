# Generated by Django 4.2.7 on 2025-10-14 17:43

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0006_user_tax_rate'),
    ]

    operations = [
        migrations.CreateModel(
            name='RestaurantSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_start_date', models.DateField(help_text='When the subscription becomes active')),
                ('subscription_end_date', models.DateField(help_text='When the subscription expires')),
                ('subscription_plan', models.CharField(choices=[('trial', 'Trial (7 days)'), ('basic', 'Basic (Monthly)'), ('premium', 'Premium (Monthly)'), ('enterprise', 'Enterprise (Yearly)'), ('custom', 'Custom Plan')], default='trial', max_length=20)),
                ('subscription_status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('expired', 'Expired'), ('blocked', 'Blocked by Admin'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('is_blocked_by_admin', models.BooleanField(default=False, help_text='Manually blocked by system administrator')),
                ('block_reason', models.TextField(blank=True, help_text='Reason for blocking (if blocked by admin)')),
                ('grace_period_days', models.PositiveIntegerField(default=7, help_text='Grace period after expiration before full blocking')),
                ('monthly_fee', models.DecimalField(decimal_places=2, default=Decimal('29.99'), help_text='Monthly subscription fee', max_digits=10)),
                ('last_payment_date', models.DateField(blank=True, help_text='Date of last successful payment', null=True)),
                ('next_billing_date', models.DateField(blank=True, help_text='Next billing cycle date', null=True)),
                ('expiration_warning_sent', models.BooleanField(default=False, help_text='Whether expiration warning has been sent')),
                ('warning_sent_date', models.DateField(blank=True, help_text='Date when expiration warning was sent', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__name': 'administrator'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_subscriptions', to=settings.AUTH_USER_MODEL)),
                ('restaurant_owner', models.OneToOneField(limit_choices_to={'role__name': 'owner'}, on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Restaurant Subscription',
                'verbose_name_plural': 'Restaurant Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Subscription Created'), ('extended', 'Subscription Extended'), ('blocked', 'Restaurant Blocked'), ('unblocked', 'Restaurant Unblocked'), ('expired', 'Subscription Expired'), ('renewed', 'Subscription Renewed'), ('cancelled', 'Subscription Cancelled'), ('plan_changed', 'Plan Changed')], max_length=20)),
                ('description', models.TextField()),
                ('old_end_date', models.DateField(blank=True, null=True)),
                ('new_end_date', models.DateField(blank=True, null=True)),
                ('old_status', models.CharField(blank=True, max_length=20)),
                ('new_status', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(limit_choices_to={'role__name': 'administrator'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='accounts.restaurantsubscription')),
            ],
            options={
                'verbose_name': 'Subscription Log',
                'verbose_name_plural': 'Subscription Logs',
                'ordering': ['-created_at'],
            },
        ),
    ]
